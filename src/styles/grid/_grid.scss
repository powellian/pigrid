/*
*   PiGrid - aka: pigr
*/

// Base settings
$gutter: calc(var(--common-size)/1.25);

// Root BEM class - descendents within
.pigr {

	// Outer container elements - width settings
	&__container {
		@include displayMode(grid);
		grid-row-gap: $gutter;
		padding-left: 15px;
		padding-right: 15px;
		margin-left: auto;
		margin-right: auto;

		// Mapped widths ( see: $mapBreakpoints )
		&--mini {
			// Mobile-up
			width: 100%;
			max-width: map-get($map: $mapBreakpoints, $key: tabletMin);
		}
		&--midi {
			max-width: map-get($map: $mapBreakpoints, $key: tabletMax);	// max-width: 1024
		}
		&--maxi {
			max-width: map-get($map: $mapBreakpoints, $key: deskMax);	// max-width: 1440
		}
	}

	// Rows
	&__row {
		@include displayMode(grid);
		grid-row-gap: $gutter;

		@include pigrPoint(tabletMinUp){
			grid-column-gap: $gutter;
		}

		// Rows - auto-increment span for 12 col grid
		@for $i from 1 through 12 {
			&--#{$i} {
				grid-template-columns: span auto, 1fr;

				@include pigrPoint(tabletMinUp){
					grid-template-columns: repeat($i, 1fr);
				}
			}
		}
	}

	// Pods
	&__pod {
		@include displayMode(flex);
		flex-direction: column;
		justify-content: flex-start;

		@for $i from 1 through 12 {
			&--#{$i} {
				// Mobile span full-width
				grid-column: span 1 / auto;

				// Tablet min up ( >768px ):
				@include pigrPoint(tabletMinUp){
					grid-column: span $i / auto;
				}
			}
		}
	}
}